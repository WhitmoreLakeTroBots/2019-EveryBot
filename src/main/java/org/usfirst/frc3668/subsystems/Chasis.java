


package org.usfirst.frc3668.subsystems;
import com.ctre.phoenix.motorcontrol.FeedbackDevice;
import com.ctre.phoenix.motorcontrol.NeutralMode;
import com.kauailabs.navx.frc.AHRS;
import edu.wpi.first.wpilibj.Encoder;

import edu.wpi.first.wpilibj.SPI;
import com.revrobotics.CANEncoder;
import com.revrobotics.ControlType;
import com.revrobotics.CANPIDController;




import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

import edu.wpi.first.wpilibj.PowerDistributionPanel;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Chasis extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static PowerDistributionPanel powerDistributionPanel1;
    public static WPI_TalonSRX leftDrive1;
    public static WPI_TalonSRX rightDrive1;
    public static WPI_TalonSRX leftDrive2;
    public static WPI_TalonSRX rightDrive2;
    public static final int chassisDriveMaxCurrentLimit = 55;
    public static final int talonTimeOut = 10;
    public static final int chassisDriveMaxCurrentTimeout = 500;
    public static final int rightDrive1CanID = 1;
	public static final int rightDrive2CanID = 2;
	public static final int leftDrive1CanID = 3;
	public static final int leftDrive2CanID = 4;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Chasis() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        powerDistributionPanel1 = new PowerDistributionPanel(0);
        addChild("PowerDistributionPanel 1",powerDistributionPanel1);
        
        
        leftDrive1 = new WPI_TalonSRX(leftDrive1CanID);
        
        
        
        rightDrive1 = new WPI_TalonSRX(rightDrive1CanID);
        rightDrive1.setNeutralMode(NeutralMode.Brake);
		rightDrive1.configSelectedFeedbackSensor(FeedbackDevice.CTRE_MagEncoder_Absolute, 0, Chasis.talonTimeOut);
		rightDrive1.configPeakCurrentLimit(Chasis.chassisDriveMaxCurrentLimit, Chasis.talonTimeOut);
		rightDrive1.configPeakCurrentDuration(Chasis.chassisDriveMaxCurrentTimeout, Chasis.talonTimeOut);
        
        
        
        leftDrive2 = new WPI_TalonSRX(leftDrive2CanID);
        
        
        
        rightDrive2 = new WPI_TalonSRX(rightDrive2CanID);
        
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
       
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

}

